need to format cointegration test for 90 days rolling instead of entire dataset

--> then we upload to db with same test date for each pair


epsilon test:
    -->calculate z-score based on 90 day rolling mean and std
    --> find optimal z score entry and exits based on historical data
    --> each entry and exit's z score is between +-2 and +-1 and goes to +-1 and 0 and is tested in increments of 0.1
    --> calculate the reversion success rate based on z-scores to find optimal z-score entry and exit for trading pair
    --store these in DB for a trading pair


trade_window table
    id primary key INT
    ticker_id1 INT
    ticker_id2 INT
    optimal_zscore REAL
    optimal_reversions INT
    optimal_reversion_success INT
    start_date DATE
    end_date DATE
    trade_type BOOL
    unique constraint tickerid_1 ticker_id2 start_date end_date








--Options




(DONE)
Based on ticker and date from trade window table find option tickers for range based on close price

    todo:

    --S(DONE) 
        underlying close/mid price
        

    --K (DONE)
        strike price option ticker

    --T (PARTIAL)
        time to expiry:  purchase date-expiry/365 

    --r
        need risk free rate for securities
        U.S. Treasury constant‑maturity series (FRED code DGS1MO, DGS3MO, DTB3)	Manual: download CSV from https://fred.stlouisfed.org.
        Script: fredapi → fred.get_series('DGS1MO', '2024‑12‑17') / 100.
    --q
        need dividend yeilds for underlying tickers

    --P_obs 
        (bid+ask) /2

     --tt 
        +1 call // -1 put


Option Pricing Formula solving for IV:

----Solve for σ (implied volatility) that makes Black-Scholes price equal P_obs:

f(σ) = {
    For Call: Se^(-qT)Φ(d₁) - Ke^(-rT)Φ(d₂) - P_obs
    For Put:  Ke^(-rT)Φ(-d₂) - Se^(-qT)Φ(-d₁) - P_obs
}

Where:
- S: Current stock price
- K: Strike price
- r: Risk-free interest rate
- q: Dividend yield
- T: Time to expiration
- σ: Volatility (this is what we solve for)
- Φ: Standard normal cumulative distribution function
- P_obs: Observed option price

And d₁, d₂ are given by:

d₁ = [ln(S/K) + (r - q + 0.5σ²)T] / (σ√T)
d₂ = d₁ - σ√T

Note: We use numerical methods (e.g., Newton-Raphson) to solve for σ since 
the equation cannot be solved analytically.
    use brent if fails


-----Option Greeks Formulas:

Δ (Delta) = cp*e^(-qT) * Φ(cp*d₁)

Γ (Gamma) = Se^(-qT) * φ(d₁) / (S*σ*√T)

Θ (Theta) = -(S*σ*e^(-qT) * φ(d₁))/(2*√T) - cp*(r*K*e^(-rT)*Φ(cp*d₂) - q*S*e^(-qT)*Φ(cp*d₁))/365

Vega = S*e^(-qT) * φ(d₁) * √T/100

Where:
- S: Stock price
- K: Strike price
- r: Risk-free rate
- q: Dividend yield
- T: Time to expiration
- σ: Volatility
- φ: Standard normal probability density function
- Φ: Standard normal cumulative distribution function
- cp: +1 for calls, -1 for puts


MonteCarlo simulation
    --> based on a unique pair A and B find other historical points
    



